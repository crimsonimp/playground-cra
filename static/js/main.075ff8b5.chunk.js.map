{"version":3,"sources":["components/AppHeader/index.js","components/AppHeader/AppHeader.js","components/AppList/componets/AppListDialog.js","store/index.js","components/AppList/componets/AppListForm.js","components/AppList/index.js","components/AppList/AppList.js","pages/Home/index.js","pages/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["component","title","window","trigger","useScrollTrigger","disableHysteresis","threshold","target","undefined","AppBar","position","color","elevation","style","marginBottom","Container","display","alignItems","name","size","round","marginLeft","DialogTransition","React","forwardRef","props","ref","Slide","direction","AppListDialog","open","children","handler","handleToggle","Dialog","TransitionComponent","onClose","fullWidth","maxWidth","DialogTitle","IconButton","edge","aria-label","onClick","float","Close","DialogContent","INITIAL_STATE","sessionStorage","getItem","JSON","parse","store","createStore","state","type","payload","addState","filter","item","id","setItem","stringify","removeState","AppListForm","text","avatar","close","isRemove","useState","setState","btnText","setBtnText","randId","setRandId","useEffect","regenerateID","Math","ceil","random","handleChange","key","value","autoComplete","onSubmit","e","preventDefault","hasId","getState","some","i","dispatch","Typography","TextField","label","width","onChange","Button","variant","marginRight","list","setList","loading","setLoading","setIsRemove","dialogOpen","setDialogOpen","dialogTitle","setDialogTitle","subscribe","console","log","handleDialog","CircularProgress","margin","length","List","clear","map","ListItem","paddingLeft","paddingRight","ListItemAvatar","ListItemText","primary","secondary","ListItemSecondaryAction","handleEdit","Edit","handleRemove","Delete","Grid","container","spacing","xs","App","exact","path","Home","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.075ff8b5.chunk.js","sourcesContent":["import component from './AppHeader.js';\r\n\r\nexport default component;\r\n","import React from \"react\";\r\nimport Avatar from \"react-avatar\";\r\nimport { AppBar, Container, useScrollTrigger } from \"@material-ui/core\";\r\n\r\nconst AppHeader = ({ title = \"Home\", window }) => {\r\n  const trigger = useScrollTrigger({\r\n    disableHysteresis: true,\r\n    threshold: 0,\r\n    target: window ? window() : undefined,\r\n  });\r\n\r\n  return (\r\n    <AppBar\r\n      position=\"sticky\"\r\n      color=\"default\"\r\n      elevation={trigger ? 4 : 0}\r\n      style={{ marginBottom: \"1rem\" }}\r\n    >\r\n      <Container style={{ display: \"flex\", alignItems: \"center\" }}>\r\n        <Avatar name={title} size={64} />\r\n\r\n        <Avatar name=\"User\" size={48} round={true} style={{ marginLeft: \"auto\" }}/>\r\n      </Container>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import React from \"react\";\r\n\r\nimport {\r\n  Slide,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { Close } from \"@material-ui/icons\";\r\n\r\nconst DialogTransition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst AppListDialog = ({ open = false, title, children, handler }) => {\r\n  const handleToggle = () => {\r\n    handler(!open);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      TransitionComponent={DialogTransition}\r\n      onClose={handleToggle}\r\n      fullWidth={true}\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle>\r\n        {title}\r\n        <IconButton\r\n          edge=\"end\"\r\n          aria-label=\"close\"\r\n          onClick={handleToggle}\r\n          style={{ float: \"right\" }}\r\n        >\r\n          <Close />\r\n        </IconButton>\r\n      </DialogTitle>\r\n\r\n      <DialogContent>\r\n        {children}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AppListDialog;\r\n","import { createStore } from \"redux\";\r\n\r\nconst INITIAL_STATE = sessionStorage.getItem('list') ? JSON.parse(sessionStorage.getItem('list')) : [];\r\n\r\nconst appState = (state = INITIAL_STATE, { type, payload }) => {\r\n  switch(type) {\r\n    case 'ADD':\r\n      // payload === { id: 0, name: '..' };\r\n      const addState = state.filter(item => item.id !== payload.id);\r\n      state = [...addState, payload];\r\n      sessionStorage.setItem('list', JSON.stringify(state));\r\n      return state;\r\n    case \"REMOVE\":\r\n      // payload === { id: 0, name: '..' };\r\n      const removeState = state.filter(item => item.id !== payload.id);\r\n      state = removeState;\r\n      sessionStorage.setItem('list', JSON.stringify(state));\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst store = createStore(appState);\r\n\r\nexport default store;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Button, TextField, Typography } from \"@material-ui/core\";\r\n\r\nimport store from \"../../../store\";\r\n\r\nconst SUBMIT_BTN = \"Submit\";\r\nconst REMOVE_BTN = \"Remove\";\r\nconst CANCEL_BTN = \"Cancel\";\r\n\r\nconst AppListForm = ({\r\n  id,\r\n  name = \"\",\r\n  text = \"\",\r\n  avatar = \"\",\r\n  close,\r\n  isRemove,\r\n}) => {\r\n  const [state, setState] = useState({ id, name, text, avatar });\r\n  const [btnText, setBtnText] = useState(SUBMIT_BTN);\r\n  const [randId, setRandId] = useState();\r\n\r\n  useEffect(() => {\r\n    setBtnText(isRemove ? REMOVE_BTN : SUBMIT_BTN);\r\n    regenerateID();\r\n  }, [isRemove]);\r\n\r\n  const regenerateID = () => setRandId(Math.ceil(Math.random() * 1000));\r\n\r\n  const handleChange = (key, value) => {\r\n    setState((state) => ({ ...state, [key]: value }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const list = store.getState();\r\n    const hasId = list.some((i) => i.id === randId);\r\n    const type = isRemove ? \"REMOVE\" : \"ADD\";\r\n    const payload = { ...state, id: id || randId };\r\n    if (hasId) regenerateID();\r\n    store.dispatch({ type, payload });\r\n    close();\r\n  };\r\n\r\n  return (\r\n    <form autoComplete=\"off\" onSubmit={handleSubmit}>\r\n      {isRemove ? (\r\n        <Typography component=\"p\" style={{ marginBottom: \"1rem\" }}>\r\n          Are you sure you want to remove card{\" \"}\r\n          <strong>\"{name}\"</strong>?\r\n        </Typography>\r\n      ) : (\r\n        <>\r\n          <TextField\r\n            name=\"name\"\r\n            label=\"Card name\"\r\n            value={state.name}\r\n            style={{ width: \"100%\", marginBottom: \"1rem\" }}\r\n            onChange={(e) => handleChange(\"name\", e.target.value)}\r\n          />\r\n          <TextField\r\n            name=\"text\"\r\n            label=\"Card text\"\r\n            value={state.text}\r\n            style={{ width: \"100%\", marginBottom: \"1rem\" }}\r\n            onChange={(e) => handleChange(\"text\", e.target.value)}\r\n          />\r\n          <TextField\r\n            name=\"avatar\"\r\n            label=\"Card avatar\"\r\n            value={state.avatar}\r\n            style={{ width: \"100%\", marginBottom: \"1rem\" }}\r\n            onChange={(e) => handleChange(\"avatar\", e.target.value)}\r\n          />\r\n        </>\r\n      )}\r\n      <Button\r\n        type=\"reset\"\r\n        variant=\"contained\"\r\n        color=\"inherit\"\r\n        style={{ marginRight: \"1rem\", marginBottom: \"1rem\" }}\r\n        onClick={close}\r\n      >\r\n        {CANCEL_BTN}\r\n      </Button>\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        style={{ marginBottom: \"1rem\" }}\r\n      >\r\n        {btnText}\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AppListForm;\r\n","import component from './AppList.js';\r\n\r\nexport default component;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Avatar from \"react-avatar\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemAvatar,\r\n  ListItemSecondaryAction,\r\n  Button,\r\n  IconButton,\r\n  Typography,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { Edit, Delete } from \"@material-ui/icons\";\r\n\r\nimport AppListDialog from \"./componets/AppListDialog\";\r\nimport AppListForm from \"./componets/AppListForm\";\r\n\r\nimport store from \"../../store\";\r\n\r\nconst CREATE_TITLE = \"Create new card\";\r\nconst EDIT_TITLE = \"Edit card\";\r\nconst REMOVE_TITLE = \"Remove Card\";\r\n\r\nconst AppList = () => {\r\n  const [list, setList] = useState(null);\r\n  const [item, setItem] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [isRemove, setIsRemove] = useState(false);\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const [dialogTitle, setDialogTitle] = useState(CREATE_TITLE);\r\n\r\n  useEffect(() => {\r\n    setLoading(false);\r\n    setList(store.getState());\r\n    store.subscribe(() => console.log(\"Store:\", store.getState()));\r\n    // eslint-disable-next-line\r\n  }, [list, dialogOpen, store.getState()]);\r\n\r\n  const handleDialog = () => {\r\n    setDialogOpen(!dialogOpen);\r\n    if (!dialogOpen) {\r\n      setDialogTitle(CREATE_TITLE);\r\n      setIsRemove(false);\r\n      setItem({});\r\n    }\r\n  };\r\n\r\n  const handleEdit = (item) => {\r\n    setDialogTitle(`${EDIT_TITLE} ID: ${item.id}`);\r\n    setIsRemove(false);\r\n    setItem(item);\r\n    setDialogOpen(!dialogOpen);\r\n  };\r\n  const handleRemove = (item) => {\r\n    setDialogTitle(`${REMOVE_TITLE} ID: ${item.id}`);\r\n    setIsRemove(true);\r\n    setItem(item);\r\n    setDialogOpen(!dialogOpen);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n        onClick={handleDialog}\r\n        style={{ float: \"right\" }}\r\n      >\r\n        Create card\r\n      </Button>\r\n\r\n      {loading ? (\r\n        <CircularProgress style={{ margin: \"auto\" }} />\r\n      ) : list && list.length ? (\r\n        <List style={{ clear: \"both\" }}>\r\n          {list.map((item) => (\r\n            <ListItem key={item.id} style={{ paddingLeft: 0, paddingRight: 0 }}>\r\n              <ListItemAvatar>\r\n                <Avatar\r\n                  name={item.avatar || item.name}\r\n                  style={{ marginRight: \"1rem\" }}\r\n                  size={64}\r\n                />\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={\r\n                  <Typography variant=\"subtitle1\">{item.name}</Typography>\r\n                }\r\n                secondary={\r\n                  <Typography variant=\"caption\">\r\n                    <span style={{ display: \"block\" }}>{item.text}</span>\r\n                    <small style={{ color: \"teal\" }}>ID: {item.id}</small>\r\n                  </Typography>\r\n                }\r\n              />\r\n              <ListItemSecondaryAction>\r\n                <IconButton edge=\"end\" onClick={() => handleEdit(item)}>\r\n                  <Edit />\r\n                </IconButton>\r\n                <IconButton edge=\"end\" onClick={() => handleRemove(item)}>\r\n                  <Delete />\r\n                </IconButton>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      ) : (\r\n        \"Empty list. Create one.\"\r\n      )}\r\n\r\n      <AppListDialog\r\n        open={dialogOpen}\r\n        title={dialogTitle}\r\n        handler={handleDialog}\r\n      >\r\n        <AppListForm {...item} close={handleDialog} isRemove={isRemove} />\r\n      </AppListDialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppList;\r\n","import component from './Home.js';\r\n\r\nexport default component;\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport AppHeader from '../../components/AppHeader';\r\nimport AppList from '../../components/AppList';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <AppHeader title=\"Playground Create React App\" />\r\n\r\n      <Container>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12}>\r\n            <AppList />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Home from './pages/Home';\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(\n  // React.StrictMode\n  <>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}